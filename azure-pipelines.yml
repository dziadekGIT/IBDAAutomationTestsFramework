pr:
  branches:
    include:
      - main
  paths:
    exclude:
      - docs/**
      - README.md

#macos-latest
pool:
  vmImage: 'ubuntu-latest'

variables:
  dockerImageName: 'ibda-tests'


steps:
- task: Checkout@1
  displayName: 'Checkout repository'


#- script: |
#    cat > IBDA_automationTests/config.json <<EOF
#    {
#      "test_operatorIBDA": {
#        "username": "test_operatorIBDA",
#        "password": "US2023!"
#      },
#      "test_kierownikLAB": {
#        "username": "test_kierownikLAB",
#        "password": "US2023!"
#      },
#      "test_OpiekunIBDA": {
#        "username": "test_OpiekunIBDA",
#        "password": "US2023!"
#      },
#      "test_PracownikBWG": {
#        "username": "test_PracownikBWG",
#        "password": "US2023!"
#      },
#      "test_PracownikSAP": {
#        "username": "test_PracownikSAP",
#        "password": "US2023!"
#      },
#      "test_PracownikCBIBDA": {
#        "username": "test_PracownikCBIBDA",
#        "password": "US2023!"
#      },
#      "test_koordynatorWydz": {
#        "username": "test_koordynatorWydz",
#        "password": "US2023!"
#      },
#      "test_KierownikDP": {
#        "username": "test_KierownikDP",
#        "password": "US2023!"
#      }
#    }
#    EOF
#  displayName: 'Generate config.json with credentials'


- task: Docker@2
  displayName: 'Build Docker Image'
  inputs:
    command: 'build'
    Dockerfile: '**/Dockerfile'
#    tags: |
#      $(dockerImageName):$(dockerImageTag)
#      $(dockerImageName):latest

- script: |
    docker save $(dockerImageName):$(dockerImageTag) -o ibda-tests.tar
  displayName: 'Save Docker Image as TAR'

- task: PublishPipelineArtifact@1
  inputs:
    targetPath: 'ibda-tests.tar'
    artifact: 'docker-image'
  displayName: 'Publish Docker Image as Artifact'